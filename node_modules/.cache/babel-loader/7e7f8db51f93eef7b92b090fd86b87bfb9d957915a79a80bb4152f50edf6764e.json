{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('aurelia-pal')) : typeof define === 'function' && define.amd ? define(['exports', 'aurelia-pal'], factory) : (global = global || self, factory((global.au = global.au || {}, global.au.fetchClient = {}), global.au));\n})(this, function (exports, aureliaPal) {\n  'use strict';\n\n  function json(body, replacer) {\n    return JSON.stringify(body !== undefined ? body : {}, replacer);\n  }\n  var retryStrategy = {\n    fixed: 0,\n    incremental: 1,\n    exponential: 2,\n    random: 3\n  };\n  var defaultRetryConfig = {\n    maxRetries: 3,\n    interval: 1000,\n    strategy: retryStrategy.fixed\n  };\n  var RetryInterceptor = function () {\n    function RetryInterceptor(retryConfig) {\n      this.retryConfig = Object.assign({}, defaultRetryConfig, retryConfig || {});\n      if (this.retryConfig.strategy === retryStrategy.exponential && this.retryConfig.interval <= 1000) {\n        throw new Error('An interval less than or equal to 1 second is not allowed when using the exponential retry strategy');\n      }\n    }\n    RetryInterceptor.prototype.request = function (request) {\n      var $r = request;\n      if (!$r.retryConfig) {\n        $r.retryConfig = Object.assign({}, this.retryConfig);\n        $r.retryConfig.counter = 0;\n      }\n      $r.retryConfig.requestClone = request.clone();\n      return request;\n    };\n    RetryInterceptor.prototype.response = function (response, request) {\n      delete request.retryConfig;\n      return response;\n    };\n    RetryInterceptor.prototype.responseError = function (error, request, httpClient) {\n      var retryConfig = request.retryConfig;\n      var requestClone = retryConfig.requestClone;\n      return Promise.resolve().then(function () {\n        if (retryConfig.counter < retryConfig.maxRetries) {\n          var result = retryConfig.doRetry ? retryConfig.doRetry(error, request) : true;\n          return Promise.resolve(result).then(function (doRetry) {\n            if (doRetry) {\n              retryConfig.counter++;\n              return new Promise(function (resolve) {\n                return aureliaPal.PLATFORM.global.setTimeout(resolve, calculateDelay(retryConfig) || 0);\n              }).then(function () {\n                var newRequest = requestClone.clone();\n                if (typeof retryConfig.beforeRetry === 'function') {\n                  return retryConfig.beforeRetry(newRequest, httpClient);\n                }\n                return newRequest;\n              }).then(function (newRequest) {\n                return httpClient.fetch(Object.assign(newRequest, {\n                  retryConfig: retryConfig\n                }));\n              });\n            }\n            delete request.retryConfig;\n            throw error;\n          });\n        }\n        delete request.retryConfig;\n        throw error;\n      });\n    };\n    return RetryInterceptor;\n  }();\n  function calculateDelay(retryConfig) {\n    var interval = retryConfig.interval,\n      strategy = retryConfig.strategy,\n      minRandomInterval = retryConfig.minRandomInterval,\n      maxRandomInterval = retryConfig.maxRandomInterval,\n      counter = retryConfig.counter;\n    if (typeof strategy === 'function') {\n      return retryConfig.strategy(counter);\n    }\n    switch (strategy) {\n      case retryStrategy.fixed:\n        return retryStrategies[retryStrategy.fixed](interval);\n      case retryStrategy.incremental:\n        return retryStrategies[retryStrategy.incremental](counter, interval);\n      case retryStrategy.exponential:\n        return retryStrategies[retryStrategy.exponential](counter, interval);\n      case retryStrategy.random:\n        return retryStrategies[retryStrategy.random](counter, interval, minRandomInterval, maxRandomInterval);\n      default:\n        throw new Error('Unrecognized retry strategy');\n    }\n  }\n  var retryStrategies = [function (interval) {\n    return interval;\n  }, function (retryCount, interval) {\n    return interval * retryCount;\n  }, function (retryCount, interval) {\n    return retryCount === 1 ? interval : Math.pow(interval, retryCount) / 1000;\n  }, function (retryCount, interval, minRandomInterval, maxRandomInterval) {\n    if (minRandomInterval === void 0) {\n      minRandomInterval = 0;\n    }\n    if (maxRandomInterval === void 0) {\n      maxRandomInterval = 60000;\n    }\n    return Math.random() * (maxRandomInterval - minRandomInterval) + minRandomInterval;\n  }];\n  var HttpClientConfiguration = function () {\n    function HttpClientConfiguration() {\n      this.baseUrl = '';\n      this.defaults = {};\n      this.interceptors = [];\n    }\n    HttpClientConfiguration.prototype.withBaseUrl = function (baseUrl) {\n      this.baseUrl = baseUrl;\n      return this;\n    };\n    HttpClientConfiguration.prototype.withDefaults = function (defaults) {\n      this.defaults = defaults;\n      return this;\n    };\n    HttpClientConfiguration.prototype.withInterceptor = function (interceptor) {\n      this.interceptors.push(interceptor);\n      return this;\n    };\n    HttpClientConfiguration.prototype.useStandardConfiguration = function () {\n      var standardConfig = {\n        credentials: 'same-origin'\n      };\n      Object.assign(this.defaults, standardConfig, this.defaults);\n      return this.rejectErrorResponses();\n    };\n    HttpClientConfiguration.prototype.rejectErrorResponses = function () {\n      return this.withInterceptor({\n        response: rejectOnError\n      });\n    };\n    HttpClientConfiguration.prototype.withRetry = function (config) {\n      var interceptor = new RetryInterceptor(config);\n      return this.withInterceptor(interceptor);\n    };\n    return HttpClientConfiguration;\n  }();\n  function rejectOnError(response) {\n    if (!response.ok) {\n      throw response;\n    }\n    return response;\n  }\n  var HttpClient = function () {\n    function HttpClient() {\n      this.activeRequestCount = 0;\n      this.isRequesting = false;\n      this.isConfigured = false;\n      this.baseUrl = '';\n      this.defaults = null;\n      this.interceptors = [];\n      if (typeof fetch === 'undefined') {\n        throw new Error('HttpClient requires a Fetch API implementation, but the current environment doesn\\'t support it. You may need to load a polyfill such as https://github.com/github/fetch');\n      }\n    }\n    HttpClient.prototype.configure = function (config) {\n      var normalizedConfig;\n      if (typeof config === 'object') {\n        normalizedConfig = {\n          defaults: config\n        };\n      } else if (typeof config === 'function') {\n        normalizedConfig = new HttpClientConfiguration();\n        normalizedConfig.baseUrl = this.baseUrl;\n        normalizedConfig.defaults = Object.assign({}, this.defaults);\n        normalizedConfig.interceptors = this.interceptors;\n        var c = config(normalizedConfig);\n        if (HttpClientConfiguration.prototype.isPrototypeOf(c)) {\n          normalizedConfig = c;\n        }\n      } else {\n        throw new Error('invalid config');\n      }\n      var defaults = normalizedConfig.defaults;\n      if (defaults && Headers.prototype.isPrototypeOf(defaults.headers)) {\n        throw new Error('Default headers must be a plain object.');\n      }\n      var interceptors = normalizedConfig.interceptors;\n      if (interceptors && interceptors.length) {\n        if (interceptors.filter(function (x) {\n          return RetryInterceptor.prototype.isPrototypeOf(x);\n        }).length > 1) {\n          throw new Error('Only one RetryInterceptor is allowed.');\n        }\n        var retryInterceptorIndex = interceptors.findIndex(function (x) {\n          return RetryInterceptor.prototype.isPrototypeOf(x);\n        });\n        if (retryInterceptorIndex >= 0 && retryInterceptorIndex !== interceptors.length - 1) {\n          throw new Error('The retry interceptor must be the last interceptor defined.');\n        }\n      }\n      this.baseUrl = normalizedConfig.baseUrl;\n      this.defaults = defaults;\n      this.interceptors = normalizedConfig.interceptors || [];\n      this.isConfigured = true;\n      return this;\n    };\n    HttpClient.prototype.fetch = function (input, init) {\n      var _this = this;\n      trackRequestStart(this);\n      var request = this.buildRequest(input, init);\n      return processRequest(request, this.interceptors, this).then(function (result) {\n        var response = null;\n        if (Response.prototype.isPrototypeOf(result)) {\n          response = Promise.resolve(result);\n        } else if (Request.prototype.isPrototypeOf(result)) {\n          request = result;\n          response = fetch(result);\n        } else {\n          throw new Error(\"An invalid result was returned by the interceptor chain. Expected a Request or Response instance, but got [\" + result + \"]\");\n        }\n        return processResponse(response, _this.interceptors, request, _this);\n      }).then(function (result) {\n        if (Request.prototype.isPrototypeOf(result)) {\n          return _this.fetch(result);\n        }\n        return result;\n      }).then(function (result) {\n        trackRequestEnd(_this);\n        return result;\n      }, function (error) {\n        trackRequestEnd(_this);\n        throw error;\n      });\n    };\n    HttpClient.prototype.buildRequest = function (input, init) {\n      var defaults = this.defaults || {};\n      var request;\n      var body;\n      var requestContentType;\n      var parsedDefaultHeaders = parseHeaderValues(defaults.headers);\n      if (Request.prototype.isPrototypeOf(input)) {\n        request = input;\n        requestContentType = new Headers(request.headers).get('Content-Type');\n      } else {\n        if (!init) {\n          init = {};\n        }\n        body = init.body;\n        var bodyObj = body ? {\n          body: body\n        } : null;\n        var requestInit = Object.assign({}, defaults, {\n          headers: {}\n        }, init, bodyObj);\n        requestContentType = new Headers(requestInit.headers).get('Content-Type');\n        request = new Request(getRequestUrl(this.baseUrl, input), requestInit);\n      }\n      if (!requestContentType) {\n        if (new Headers(parsedDefaultHeaders).has('content-type')) {\n          request.headers.set('Content-Type', new Headers(parsedDefaultHeaders).get('content-type'));\n        } else if (body && isJSON(body)) {\n          request.headers.set('Content-Type', 'application/json');\n        }\n      }\n      setDefaultHeaders(request.headers, parsedDefaultHeaders);\n      if (body && Blob.prototype.isPrototypeOf(body) && body.type) {\n        request.headers.set('Content-Type', body.type);\n      }\n      return request;\n    };\n    HttpClient.prototype.get = function (input, init) {\n      return this.fetch(input, init);\n    };\n    HttpClient.prototype.post = function (input, body, init) {\n      return callFetch(this, input, body, init, 'POST');\n    };\n    HttpClient.prototype.put = function (input, body, init) {\n      return callFetch(this, input, body, init, 'PUT');\n    };\n    HttpClient.prototype.patch = function (input, body, init) {\n      return callFetch(this, input, body, init, 'PATCH');\n    };\n    HttpClient.prototype.delete = function (input, body, init) {\n      return callFetch(this, input, body, init, 'DELETE');\n    };\n    return HttpClient;\n  }();\n  var absoluteUrlRegexp = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\n  function trackRequestStart(client) {\n    client.isRequesting = !!++client.activeRequestCount;\n    if (client.isRequesting) {\n      var evt_1 = aureliaPal.DOM.createCustomEvent('aurelia-fetch-client-request-started', {\n        bubbles: true,\n        cancelable: true\n      });\n      setTimeout(function () {\n        return aureliaPal.DOM.dispatchEvent(evt_1);\n      }, 1);\n    }\n  }\n  function trackRequestEnd(client) {\n    client.isRequesting = !! --client.activeRequestCount;\n    if (!client.isRequesting) {\n      var evt_2 = aureliaPal.DOM.createCustomEvent('aurelia-fetch-client-requests-drained', {\n        bubbles: true,\n        cancelable: true\n      });\n      setTimeout(function () {\n        return aureliaPal.DOM.dispatchEvent(evt_2);\n      }, 1);\n    }\n  }\n  function parseHeaderValues(headers) {\n    var parsedHeaders = {};\n    for (var name_1 in headers || {}) {\n      if (headers.hasOwnProperty(name_1)) {\n        parsedHeaders[name_1] = typeof headers[name_1] === 'function' ? headers[name_1]() : headers[name_1];\n      }\n    }\n    return parsedHeaders;\n  }\n  function getRequestUrl(baseUrl, url) {\n    if (absoluteUrlRegexp.test(url)) {\n      return url;\n    }\n    return (baseUrl || '') + url;\n  }\n  function setDefaultHeaders(headers, defaultHeaders) {\n    for (var name_2 in defaultHeaders || {}) {\n      if (defaultHeaders.hasOwnProperty(name_2) && !headers.has(name_2)) {\n        headers.set(name_2, defaultHeaders[name_2]);\n      }\n    }\n  }\n  function processRequest(request, interceptors, http) {\n    return applyInterceptors(request, interceptors, 'request', 'requestError', http);\n  }\n  function processResponse(response, interceptors, request, http) {\n    return applyInterceptors(response, interceptors, 'response', 'responseError', request, http);\n  }\n  function applyInterceptors(input, interceptors, successName, errorName) {\n    var interceptorArgs = [];\n    for (var _i = 4; _i < arguments.length; _i++) {\n      interceptorArgs[_i - 4] = arguments[_i];\n    }\n    return (interceptors || []).reduce(function (chain, interceptor) {\n      var successHandler = interceptor[successName];\n      var errorHandler = interceptor[errorName];\n      return chain.then(successHandler && function (value) {\n        return successHandler.call.apply(successHandler, [interceptor, value].concat(interceptorArgs));\n      } || identity, errorHandler && function (reason) {\n        return errorHandler.call.apply(errorHandler, [interceptor, reason].concat(interceptorArgs));\n      } || thrower);\n    }, Promise.resolve(input));\n  }\n  function isJSON(str) {\n    try {\n      JSON.parse(str);\n    } catch (err) {\n      return false;\n    }\n    return true;\n  }\n  function identity(x) {\n    return x;\n  }\n  function thrower(x) {\n    throw x;\n  }\n  function callFetch(client, input, body, init, method) {\n    if (!init) {\n      init = {};\n    }\n    init.method = method;\n    if (body) {\n      init.body = body;\n    }\n    return client.fetch(input, init);\n  }\n  exports.json = json;\n  exports.retryStrategy = retryStrategy;\n  exports.RetryInterceptor = RetryInterceptor;\n  exports.HttpClientConfiguration = HttpClientConfiguration;\n  exports.HttpClient = HttpClient;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","self","au","fetchClient","aureliaPal","json","body","replacer","JSON","stringify","undefined","retryStrategy","fixed","incremental","exponential","random","defaultRetryConfig","maxRetries","interval","strategy","RetryInterceptor","retryConfig","Object","assign","Error","prototype","request","$r","counter","requestClone","clone","response","responseError","error","httpClient","Promise","resolve","then","result","doRetry","PLATFORM","setTimeout","calculateDelay","newRequest","beforeRetry","fetch","minRandomInterval","maxRandomInterval","retryStrategies","retryCount","Math","pow","HttpClientConfiguration","baseUrl","defaults","interceptors","withBaseUrl","withDefaults","withInterceptor","interceptor","push","useStandardConfiguration","standardConfig","credentials","rejectErrorResponses","rejectOnError","withRetry","config","ok","HttpClient","activeRequestCount","isRequesting","isConfigured","configure","normalizedConfig","c","isPrototypeOf","Headers","headers","length","filter","x","retryInterceptorIndex","findIndex","input","init","_this","trackRequestStart","buildRequest","processRequest","Response","Request","processResponse","trackRequestEnd","requestContentType","parsedDefaultHeaders","parseHeaderValues","get","bodyObj","requestInit","getRequestUrl","has","set","isJSON","setDefaultHeaders","Blob","type","post","callFetch","put","patch","delete","absoluteUrlRegexp","client","evt_1","DOM","createCustomEvent","bubbles","cancelable","dispatchEvent","evt_2","parsedHeaders","name_1","hasOwnProperty","url","test","defaultHeaders","name_2","http","applyInterceptors","successName","errorName","interceptorArgs","_i","arguments","reduce","chain","successHandler","errorHandler","value","call","apply","concat","identity","reason","thrower","str","parse","err","method","defineProperty"],"sources":["/Users/mac/Desktop/lightsource/projects/nlp/node_modules/aurelia-fetch-client/dist/umd/aurelia-fetch-client.js"],"sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('aurelia-pal')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'aurelia-pal'], factory) :\n  (global = global || self, factory((global.au = global.au || {}, global.au.fetchClient = {}), global.au));\n}(this, function (exports, aureliaPal) { 'use strict';\n\n  function json(body, replacer) {\r\n      return JSON.stringify((body !== undefined ? body : {}), replacer);\r\n  }\n\n  var retryStrategy = {\r\n      fixed: 0,\r\n      incremental: 1,\r\n      exponential: 2,\r\n      random: 3\r\n  };\r\n  var defaultRetryConfig = {\r\n      maxRetries: 3,\r\n      interval: 1000,\r\n      strategy: retryStrategy.fixed\r\n  };\r\n  var RetryInterceptor = (function () {\r\n      function RetryInterceptor(retryConfig) {\r\n          this.retryConfig = Object.assign({}, defaultRetryConfig, retryConfig || {});\r\n          if (this.retryConfig.strategy === retryStrategy.exponential &&\r\n              this.retryConfig.interval <= 1000) {\r\n              throw new Error('An interval less than or equal to 1 second is not allowed when using the exponential retry strategy');\r\n          }\r\n      }\r\n      RetryInterceptor.prototype.request = function (request) {\r\n          var $r = request;\r\n          if (!$r.retryConfig) {\r\n              $r.retryConfig = Object.assign({}, this.retryConfig);\r\n              $r.retryConfig.counter = 0;\r\n          }\r\n          $r.retryConfig.requestClone = request.clone();\r\n          return request;\r\n      };\r\n      RetryInterceptor.prototype.response = function (response, request) {\r\n          delete request.retryConfig;\r\n          return response;\r\n      };\r\n      RetryInterceptor.prototype.responseError = function (error, request, httpClient) {\r\n          var retryConfig = request.retryConfig;\r\n          var requestClone = retryConfig.requestClone;\r\n          return Promise.resolve().then(function () {\r\n              if (retryConfig.counter < retryConfig.maxRetries) {\r\n                  var result = retryConfig.doRetry ? retryConfig.doRetry(error, request) : true;\r\n                  return Promise.resolve(result).then(function (doRetry) {\r\n                      if (doRetry) {\r\n                          retryConfig.counter++;\r\n                          return new Promise(function (resolve) { return aureliaPal.PLATFORM.global.setTimeout(resolve, calculateDelay(retryConfig) || 0); })\r\n                              .then(function () {\r\n                              var newRequest = requestClone.clone();\r\n                              if (typeof (retryConfig.beforeRetry) === 'function') {\r\n                                  return retryConfig.beforeRetry(newRequest, httpClient);\r\n                              }\r\n                              return newRequest;\r\n                          })\r\n                              .then(function (newRequest) {\r\n                              return httpClient.fetch(Object.assign(newRequest, { retryConfig: retryConfig }));\r\n                          });\r\n                      }\r\n                      delete request.retryConfig;\r\n                      throw error;\r\n                  });\r\n              }\r\n              delete request.retryConfig;\r\n              throw error;\r\n          });\r\n      };\r\n      return RetryInterceptor;\r\n  }());\r\n  function calculateDelay(retryConfig) {\r\n      var interval = retryConfig.interval, strategy = retryConfig.strategy, minRandomInterval = retryConfig.minRandomInterval, maxRandomInterval = retryConfig.maxRandomInterval, counter = retryConfig.counter;\r\n      if (typeof (strategy) === 'function') {\r\n          return retryConfig.strategy(counter);\r\n      }\r\n      switch (strategy) {\r\n          case (retryStrategy.fixed):\r\n              return retryStrategies[retryStrategy.fixed](interval);\r\n          case (retryStrategy.incremental):\r\n              return retryStrategies[retryStrategy.incremental](counter, interval);\r\n          case (retryStrategy.exponential):\r\n              return retryStrategies[retryStrategy.exponential](counter, interval);\r\n          case (retryStrategy.random):\r\n              return retryStrategies[retryStrategy.random](counter, interval, minRandomInterval, maxRandomInterval);\r\n          default:\r\n              throw new Error('Unrecognized retry strategy');\r\n      }\r\n  }\r\n  var retryStrategies = [\r\n      function (interval) { return interval; },\r\n      function (retryCount, interval) { return interval * retryCount; },\r\n      function (retryCount, interval) { return retryCount === 1 ? interval : Math.pow(interval, retryCount) / 1000; },\r\n      function (retryCount, interval, minRandomInterval, maxRandomInterval) {\r\n          if (minRandomInterval === void 0) { minRandomInterval = 0; }\r\n          if (maxRandomInterval === void 0) { maxRandomInterval = 60000; }\r\n          return Math.random() * (maxRandomInterval - minRandomInterval) + minRandomInterval;\r\n      }\r\n  ];\n\n  var HttpClientConfiguration = (function () {\r\n      function HttpClientConfiguration() {\r\n          this.baseUrl = '';\r\n          this.defaults = {};\r\n          this.interceptors = [];\r\n      }\r\n      HttpClientConfiguration.prototype.withBaseUrl = function (baseUrl) {\r\n          this.baseUrl = baseUrl;\r\n          return this;\r\n      };\r\n      HttpClientConfiguration.prototype.withDefaults = function (defaults) {\r\n          this.defaults = defaults;\r\n          return this;\r\n      };\r\n      HttpClientConfiguration.prototype.withInterceptor = function (interceptor) {\r\n          this.interceptors.push(interceptor);\r\n          return this;\r\n      };\r\n      HttpClientConfiguration.prototype.useStandardConfiguration = function () {\r\n          var standardConfig = { credentials: 'same-origin' };\r\n          Object.assign(this.defaults, standardConfig, this.defaults);\r\n          return this.rejectErrorResponses();\r\n      };\r\n      HttpClientConfiguration.prototype.rejectErrorResponses = function () {\r\n          return this.withInterceptor({ response: rejectOnError });\r\n      };\r\n      HttpClientConfiguration.prototype.withRetry = function (config) {\r\n          var interceptor = new RetryInterceptor(config);\r\n          return this.withInterceptor(interceptor);\r\n      };\r\n      return HttpClientConfiguration;\r\n  }());\r\n  function rejectOnError(response) {\r\n      if (!response.ok) {\r\n          throw response;\r\n      }\r\n      return response;\r\n  }\n\n  var HttpClient = (function () {\r\n      function HttpClient() {\r\n          this.activeRequestCount = 0;\r\n          this.isRequesting = false;\r\n          this.isConfigured = false;\r\n          this.baseUrl = '';\r\n          this.defaults = null;\r\n          this.interceptors = [];\r\n          if (typeof fetch === 'undefined') {\r\n              throw new Error('HttpClient requires a Fetch API implementation, but the current environment doesn\\'t support it. You may need to load a polyfill such as https://github.com/github/fetch');\r\n          }\r\n      }\r\n      HttpClient.prototype.configure = function (config) {\r\n          var normalizedConfig;\r\n          if (typeof config === 'object') {\r\n              normalizedConfig = { defaults: config };\r\n          }\r\n          else if (typeof config === 'function') {\r\n              normalizedConfig = new HttpClientConfiguration();\r\n              normalizedConfig.baseUrl = this.baseUrl;\r\n              normalizedConfig.defaults = Object.assign({}, this.defaults);\r\n              normalizedConfig.interceptors = this.interceptors;\r\n              var c = config(normalizedConfig);\r\n              if (HttpClientConfiguration.prototype.isPrototypeOf(c)) {\r\n                  normalizedConfig = c;\r\n              }\r\n          }\r\n          else {\r\n              throw new Error('invalid config');\r\n          }\r\n          var defaults = normalizedConfig.defaults;\r\n          if (defaults && Headers.prototype.isPrototypeOf(defaults.headers)) {\r\n              throw new Error('Default headers must be a plain object.');\r\n          }\r\n          var interceptors = normalizedConfig.interceptors;\r\n          if (interceptors && interceptors.length) {\r\n              if (interceptors.filter(function (x) { return RetryInterceptor.prototype.isPrototypeOf(x); }).length > 1) {\r\n                  throw new Error('Only one RetryInterceptor is allowed.');\r\n              }\r\n              var retryInterceptorIndex = interceptors.findIndex(function (x) { return RetryInterceptor.prototype.isPrototypeOf(x); });\r\n              if (retryInterceptorIndex >= 0 && retryInterceptorIndex !== interceptors.length - 1) {\r\n                  throw new Error('The retry interceptor must be the last interceptor defined.');\r\n              }\r\n          }\r\n          this.baseUrl = normalizedConfig.baseUrl;\r\n          this.defaults = defaults;\r\n          this.interceptors = normalizedConfig.interceptors || [];\r\n          this.isConfigured = true;\r\n          return this;\r\n      };\r\n      HttpClient.prototype.fetch = function (input, init) {\r\n          var _this = this;\r\n          trackRequestStart(this);\r\n          var request = this.buildRequest(input, init);\r\n          return processRequest(request, this.interceptors, this).then(function (result) {\r\n              var response = null;\r\n              if (Response.prototype.isPrototypeOf(result)) {\r\n                  response = Promise.resolve(result);\r\n              }\r\n              else if (Request.prototype.isPrototypeOf(result)) {\r\n                  request = result;\r\n                  response = fetch(result);\r\n              }\r\n              else {\r\n                  throw new Error(\"An invalid result was returned by the interceptor chain. Expected a Request or Response instance, but got [\" + result + \"]\");\r\n              }\r\n              return processResponse(response, _this.interceptors, request, _this);\r\n          })\r\n              .then(function (result) {\r\n              if (Request.prototype.isPrototypeOf(result)) {\r\n                  return _this.fetch(result);\r\n              }\r\n              return result;\r\n          })\r\n              .then(function (result) {\r\n              trackRequestEnd(_this);\r\n              return result;\r\n          }, function (error) {\r\n              trackRequestEnd(_this);\r\n              throw error;\r\n          });\r\n      };\r\n      HttpClient.prototype.buildRequest = function (input, init) {\r\n          var defaults = this.defaults || {};\r\n          var request;\r\n          var body;\r\n          var requestContentType;\r\n          var parsedDefaultHeaders = parseHeaderValues(defaults.headers);\r\n          if (Request.prototype.isPrototypeOf(input)) {\r\n              request = input;\r\n              requestContentType = new Headers(request.headers).get('Content-Type');\r\n          }\r\n          else {\r\n              if (!init) {\r\n                  init = {};\r\n              }\r\n              body = init.body;\r\n              var bodyObj = body ? { body: body } : null;\r\n              var requestInit = Object.assign({}, defaults, { headers: {} }, init, bodyObj);\r\n              requestContentType = new Headers(requestInit.headers).get('Content-Type');\r\n              request = new Request(getRequestUrl(this.baseUrl, input), requestInit);\r\n          }\r\n          if (!requestContentType) {\r\n              if (new Headers(parsedDefaultHeaders).has('content-type')) {\r\n                  request.headers.set('Content-Type', new Headers(parsedDefaultHeaders).get('content-type'));\r\n              }\r\n              else if (body && isJSON(body)) {\r\n                  request.headers.set('Content-Type', 'application/json');\r\n              }\r\n          }\r\n          setDefaultHeaders(request.headers, parsedDefaultHeaders);\r\n          if (body && Blob.prototype.isPrototypeOf(body) && body.type) {\r\n              request.headers.set('Content-Type', body.type);\r\n          }\r\n          return request;\r\n      };\r\n      HttpClient.prototype.get = function (input, init) {\r\n          return this.fetch(input, init);\r\n      };\r\n      HttpClient.prototype.post = function (input, body, init) {\r\n          return callFetch(this, input, body, init, 'POST');\r\n      };\r\n      HttpClient.prototype.put = function (input, body, init) {\r\n          return callFetch(this, input, body, init, 'PUT');\r\n      };\r\n      HttpClient.prototype.patch = function (input, body, init) {\r\n          return callFetch(this, input, body, init, 'PATCH');\r\n      };\r\n      HttpClient.prototype.delete = function (input, body, init) {\r\n          return callFetch(this, input, body, init, 'DELETE');\r\n      };\r\n      return HttpClient;\r\n  }());\r\n  var absoluteUrlRegexp = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\r\n  function trackRequestStart(client) {\r\n      client.isRequesting = !!(++client.activeRequestCount);\r\n      if (client.isRequesting) {\r\n          var evt_1 = aureliaPal.DOM.createCustomEvent('aurelia-fetch-client-request-started', { bubbles: true, cancelable: true });\r\n          setTimeout(function () { return aureliaPal.DOM.dispatchEvent(evt_1); }, 1);\r\n      }\r\n  }\r\n  function trackRequestEnd(client) {\r\n      client.isRequesting = !!(--client.activeRequestCount);\r\n      if (!client.isRequesting) {\r\n          var evt_2 = aureliaPal.DOM.createCustomEvent('aurelia-fetch-client-requests-drained', { bubbles: true, cancelable: true });\r\n          setTimeout(function () { return aureliaPal.DOM.dispatchEvent(evt_2); }, 1);\r\n      }\r\n  }\r\n  function parseHeaderValues(headers) {\r\n      var parsedHeaders = {};\r\n      for (var name_1 in headers || {}) {\r\n          if (headers.hasOwnProperty(name_1)) {\r\n              parsedHeaders[name_1] = (typeof headers[name_1] === 'function') ? headers[name_1]() : headers[name_1];\r\n          }\r\n      }\r\n      return parsedHeaders;\r\n  }\r\n  function getRequestUrl(baseUrl, url) {\r\n      if (absoluteUrlRegexp.test(url)) {\r\n          return url;\r\n      }\r\n      return (baseUrl || '') + url;\r\n  }\r\n  function setDefaultHeaders(headers, defaultHeaders) {\r\n      for (var name_2 in defaultHeaders || {}) {\r\n          if (defaultHeaders.hasOwnProperty(name_2) && !headers.has(name_2)) {\r\n              headers.set(name_2, defaultHeaders[name_2]);\r\n          }\r\n      }\r\n  }\r\n  function processRequest(request, interceptors, http) {\r\n      return applyInterceptors(request, interceptors, 'request', 'requestError', http);\r\n  }\r\n  function processResponse(response, interceptors, request, http) {\r\n      return applyInterceptors(response, interceptors, 'response', 'responseError', request, http);\r\n  }\r\n  function applyInterceptors(input, interceptors, successName, errorName) {\r\n      var interceptorArgs = [];\r\n      for (var _i = 4; _i < arguments.length; _i++) {\r\n          interceptorArgs[_i - 4] = arguments[_i];\r\n      }\r\n      return (interceptors || [])\r\n          .reduce(function (chain, interceptor) {\r\n          var successHandler = interceptor[successName];\r\n          var errorHandler = interceptor[errorName];\r\n          return chain.then(successHandler && (function (value) { return successHandler.call.apply(successHandler, [interceptor, value].concat(interceptorArgs)); }) || identity, errorHandler && (function (reason) { return errorHandler.call.apply(errorHandler, [interceptor, reason].concat(interceptorArgs)); }) || thrower);\r\n      }, Promise.resolve(input));\r\n  }\r\n  function isJSON(str) {\r\n      try {\r\n          JSON.parse(str);\r\n      }\r\n      catch (err) {\r\n          return false;\r\n      }\r\n      return true;\r\n  }\r\n  function identity(x) {\r\n      return x;\r\n  }\r\n  function thrower(x) {\r\n      throw x;\r\n  }\r\n  function callFetch(client, input, body, init, method) {\r\n      if (!init) {\r\n          init = {};\r\n      }\r\n      init.method = method;\r\n      if (body) {\r\n          init.body = body;\r\n      }\r\n      return client.fetch(input, init);\r\n  }\n\n  exports.json = json;\n  exports.retryStrategy = retryStrategy;\n  exports.RetryInterceptor = RetryInterceptor;\n  exports.HttpClientConfiguration = HttpClientConfiguration;\n  exports.HttpClient = HttpClient;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}